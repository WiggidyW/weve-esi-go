// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.0
// source: weve_esi.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Entity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *Entity) Reset() {
	*x = Entity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entity) ProtoMessage() {}

func (x *Entity) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entity.ProtoReflect.Descriptor instead.
func (*Entity) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{0}
}

func (x *Entity) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Entity) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type MarketOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Quantity int64   `protobuf:"varint,1,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Price    float64 `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *MarketOrder) Reset() {
	*x = MarketOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketOrder) ProtoMessage() {}

func (x *MarketOrder) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketOrder.ProtoReflect.Descriptor instead.
func (*MarketOrder) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{1}
}

func (x *MarketOrder) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *MarketOrder) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type MarketOrdersRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner []*MarketOrder `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty"` // no particular order
}

func (x *MarketOrdersRep) Reset() {
	*x = MarketOrdersRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketOrdersRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketOrdersRep) ProtoMessage() {}

func (x *MarketOrdersRep) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketOrdersRep.ProtoReflect.Descriptor instead.
func (*MarketOrdersRep) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{2}
}

func (x *MarketOrdersRep) GetInner() []*MarketOrder {
	if x != nil {
		return x.Inner
	}
	return nil
}

// Request and Response Types
type MarketOrdersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId uint64 `protobuf:"varint,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	TypeId     uint32 `protobuf:"varint,2,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Token      string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	Buy        bool   `protobuf:"varint,4,opt,name=buy,proto3" json:"buy,omitempty"`
}

func (x *MarketOrdersReq) Reset() {
	*x = MarketOrdersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketOrdersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketOrdersReq) ProtoMessage() {}

func (x *MarketOrdersReq) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketOrdersReq.ProtoReflect.Descriptor instead.
func (*MarketOrdersReq) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{3}
}

func (x *MarketOrdersReq) GetLocationId() uint64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *MarketOrdersReq) GetTypeId() uint32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *MarketOrdersReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *MarketOrdersReq) GetBuy() bool {
	if x != nil {
		return x.Buy
	}
	return false
}

type MultiMarketOrderRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req *MarketOrdersReq `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Rep *MarketOrdersRep `protobuf:"bytes,2,opt,name=rep,proto3" json:"rep,omitempty"`
}

func (x *MultiMarketOrderRep) Reset() {
	*x = MultiMarketOrderRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiMarketOrderRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiMarketOrderRep) ProtoMessage() {}

func (x *MultiMarketOrderRep) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiMarketOrderRep.ProtoReflect.Descriptor instead.
func (*MultiMarketOrderRep) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{4}
}

func (x *MultiMarketOrderRep) GetReq() *MarketOrdersReq {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *MultiMarketOrderRep) GetRep() *MarketOrdersRep {
	if x != nil {
		return x.Rep
	}
	return nil
}

type MultiMarketOrdersRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner []*MultiMarketOrderRep `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty"`
}

func (x *MultiMarketOrdersRep) Reset() {
	*x = MultiMarketOrdersRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiMarketOrdersRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiMarketOrdersRep) ProtoMessage() {}

func (x *MultiMarketOrdersRep) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiMarketOrdersRep.ProtoReflect.Descriptor instead.
func (*MultiMarketOrdersRep) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{5}
}

func (x *MultiMarketOrdersRep) GetInner() []*MultiMarketOrderRep {
	if x != nil {
		return x.Inner
	}
	return nil
}

type MultiMarketOrdersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner []*MarketOrdersReq `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty"`
}

func (x *MultiMarketOrdersReq) Reset() {
	*x = MultiMarketOrdersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiMarketOrdersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiMarketOrdersReq) ProtoMessage() {}

func (x *MultiMarketOrdersReq) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiMarketOrdersReq.ProtoReflect.Descriptor instead.
func (*MultiMarketOrdersReq) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{6}
}

func (x *MultiMarketOrdersReq) GetInner() []*MarketOrdersReq {
	if x != nil {
		return x.Inner
	}
	return nil
}

// uint32 is typeid
type AdjustedPriceRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner map[uint32]float64 `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
}

func (x *AdjustedPriceRep) Reset() {
	*x = AdjustedPriceRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdjustedPriceRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdjustedPriceRep) ProtoMessage() {}

func (x *AdjustedPriceRep) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdjustedPriceRep.ProtoReflect.Descriptor instead.
func (*AdjustedPriceRep) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{7}
}

func (x *AdjustedPriceRep) GetInner() map[uint32]float64 {
	if x != nil {
		return x.Inner
	}
	return nil
}

type AdjustedPriceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AdjustedPriceReq) Reset() {
	*x = AdjustedPriceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdjustedPriceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdjustedPriceReq) ProtoMessage() {}

func (x *AdjustedPriceReq) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdjustedPriceReq.ProtoReflect.Descriptor instead.
func (*AdjustedPriceReq) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{8}
}

type SystemIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Manufacturing float64 `protobuf:"fixed64,1,opt,name=manufacturing,proto3" json:"manufacturing,omitempty"`
	ResearchTe    float64 `protobuf:"fixed64,2,opt,name=research_te,json=researchTe,proto3" json:"research_te,omitempty"`
	ResearchMe    float64 `protobuf:"fixed64,3,opt,name=research_me,json=researchMe,proto3" json:"research_me,omitempty"`
	Copying       float64 `protobuf:"fixed64,4,opt,name=copying,proto3" json:"copying,omitempty"`
	Invention     float64 `protobuf:"fixed64,5,opt,name=invention,proto3" json:"invention,omitempty"`
	Reactions     float64 `protobuf:"fixed64,6,opt,name=reactions,proto3" json:"reactions,omitempty"`
}

func (x *SystemIndex) Reset() {
	*x = SystemIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemIndex) ProtoMessage() {}

func (x *SystemIndex) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemIndex.ProtoReflect.Descriptor instead.
func (*SystemIndex) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{9}
}

func (x *SystemIndex) GetManufacturing() float64 {
	if x != nil {
		return x.Manufacturing
	}
	return 0
}

func (x *SystemIndex) GetResearchTe() float64 {
	if x != nil {
		return x.ResearchTe
	}
	return 0
}

func (x *SystemIndex) GetResearchMe() float64 {
	if x != nil {
		return x.ResearchMe
	}
	return 0
}

func (x *SystemIndex) GetCopying() float64 {
	if x != nil {
		return x.Copying
	}
	return 0
}

func (x *SystemIndex) GetInvention() float64 {
	if x != nil {
		return x.Invention
	}
	return 0
}

func (x *SystemIndex) GetReactions() float64 {
	if x != nil {
		return x.Reactions
	}
	return 0
}

// uint32 is systemid
type SystemIndexRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner map[uint32]*SystemIndex `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SystemIndexRep) Reset() {
	*x = SystemIndexRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemIndexRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemIndexRep) ProtoMessage() {}

func (x *SystemIndexRep) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemIndexRep.ProtoReflect.Descriptor instead.
func (*SystemIndexRep) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{10}
}

func (x *SystemIndexRep) GetInner() map[uint32]*SystemIndex {
	if x != nil {
		return x.Inner
	}
	return nil
}

type SystemIndexReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SystemIndexReq) Reset() {
	*x = SystemIndexReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemIndexReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemIndexReq) ProtoMessage() {}

func (x *SystemIndexReq) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemIndexReq.ProtoReflect.Descriptor instead.
func (*SystemIndexReq) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{11}
}

type IndustryJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId         uint64  `protobuf:"varint,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	CharacterId        uint64  `protobuf:"varint,2,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	Start              uint64  `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`                          // unix timestamp of when it started
	Finish             uint64  `protobuf:"varint,4,opt,name=finish,proto3" json:"finish,omitempty"`                        // unix timestamp of when it finishes
	Probability        float64 `protobuf:"fixed64,5,opt,name=probability,proto3" json:"probability,omitempty"`             // always 1.0 unless invention
	ProductId          uint32  `protobuf:"varint,6,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"` // 0 if ME/TE research
	BlueprintId        uint32  `protobuf:"varint,7,opt,name=blueprint_id,json=blueprintId,proto3" json:"blueprint_id,omitempty"`
	MaterialEfficiency int32   `protobuf:"varint,8,opt,name=material_efficiency,json=materialEfficiency,proto3" json:"material_efficiency,omitempty"` // blueprint ME
	TimeEfficiency     int32   `protobuf:"varint,9,opt,name=time_efficiency,json=timeEfficiency,proto3" json:"time_efficiency,omitempty"`             // blueprint TE
	Activity           int32   `protobuf:"varint,10,opt,name=activity,proto3" json:"activity,omitempty"`
	Runs               int32   `protobuf:"varint,11,opt,name=runs,proto3" json:"runs,omitempty"`
	IsBpc              bool    `protobuf:"varint,12,opt,name=is_bpc,json=isBpc,proto3" json:"is_bpc,omitempty"`
}

func (x *IndustryJob) Reset() {
	*x = IndustryJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndustryJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndustryJob) ProtoMessage() {}

func (x *IndustryJob) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndustryJob.ProtoReflect.Descriptor instead.
func (*IndustryJob) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{12}
}

func (x *IndustryJob) GetLocationId() uint64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *IndustryJob) GetCharacterId() uint64 {
	if x != nil {
		return x.CharacterId
	}
	return 0
}

func (x *IndustryJob) GetStart() uint64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *IndustryJob) GetFinish() uint64 {
	if x != nil {
		return x.Finish
	}
	return 0
}

func (x *IndustryJob) GetProbability() float64 {
	if x != nil {
		return x.Probability
	}
	return 0
}

func (x *IndustryJob) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *IndustryJob) GetBlueprintId() uint32 {
	if x != nil {
		return x.BlueprintId
	}
	return 0
}

func (x *IndustryJob) GetMaterialEfficiency() int32 {
	if x != nil {
		return x.MaterialEfficiency
	}
	return 0
}

func (x *IndustryJob) GetTimeEfficiency() int32 {
	if x != nil {
		return x.TimeEfficiency
	}
	return 0
}

func (x *IndustryJob) GetActivity() int32 {
	if x != nil {
		return x.Activity
	}
	return 0
}

func (x *IndustryJob) GetRuns() int32 {
	if x != nil {
		return x.Runs
	}
	return 0
}

func (x *IndustryJob) GetIsBpc() bool {
	if x != nil {
		return x.IsBpc
	}
	return false
}

type IndustryJobsRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner []*IndustryJob `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty"`
}

func (x *IndustryJobsRep) Reset() {
	*x = IndustryJobsRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndustryJobsRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndustryJobsRep) ProtoMessage() {}

func (x *IndustryJobsRep) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndustryJobsRep.ProtoReflect.Descriptor instead.
func (*IndustryJobsRep) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{13}
}

func (x *IndustryJobsRep) GetInner() []*IndustryJob {
	if x != nil {
		return x.Inner
	}
	return nil
}

type IndustryJobsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Characters   []*Entity `protobuf:"bytes,1,rep,name=characters,proto3" json:"characters,omitempty"`
	Corporations []*Entity `protobuf:"bytes,2,rep,name=corporations,proto3" json:"corporations,omitempty"`
}

func (x *IndustryJobsReq) Reset() {
	*x = IndustryJobsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndustryJobsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndustryJobsReq) ProtoMessage() {}

func (x *IndustryJobsReq) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndustryJobsReq.ProtoReflect.Descriptor instead.
func (*IndustryJobsReq) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{14}
}

func (x *IndustryJobsReq) GetCharacters() []*Entity {
	if x != nil {
		return x.Characters
	}
	return nil
}

func (x *IndustryJobsReq) GetCorporations() []*Entity {
	if x != nil {
		return x.Corporations
	}
	return nil
}

type Asset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId           uint64   `protobuf:"varint,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	Quantity           int64    `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Runs               int32    `protobuf:"varint,3,opt,name=runs,proto3" json:"runs,omitempty"`
	MaterialEfficiency int32    `protobuf:"varint,4,opt,name=material_efficiency,json=materialEfficiency,proto3" json:"material_efficiency,omitempty"`
	TimeEfficiency     int32    `protobuf:"varint,5,opt,name=time_efficiency,json=timeEfficiency,proto3" json:"time_efficiency,omitempty"`
	Flags              []string `protobuf:"bytes,6,rep,name=flags,proto3" json:"flags,omitempty"` // may include BPC or Singleton // NEVERMIND
}

func (x *Asset) Reset() {
	*x = Asset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{15}
}

func (x *Asset) GetEntityId() uint64 {
	if x != nil {
		return x.EntityId
	}
	return 0
}

func (x *Asset) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *Asset) GetRuns() int32 {
	if x != nil {
		return x.Runs
	}
	return 0
}

func (x *Asset) GetMaterialEfficiency() int32 {
	if x != nil {
		return x.MaterialEfficiency
	}
	return 0
}

func (x *Asset) GetTimeEfficiency() int32 {
	if x != nil {
		return x.TimeEfficiency
	}
	return 0
}

func (x *Asset) GetFlags() []string {
	if x != nil {
		return x.Flags
	}
	return nil
}

type TypeAssets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner []*Asset `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty"`
}

func (x *TypeAssets) Reset() {
	*x = TypeAssets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeAssets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeAssets) ProtoMessage() {}

func (x *TypeAssets) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeAssets.ProtoReflect.Descriptor instead.
func (*TypeAssets) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{16}
}

func (x *TypeAssets) GetInner() []*Asset {
	if x != nil {
		return x.Inner
	}
	return nil
}

// uint32 is typeid
type LocationAssets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner map[uint32]*TypeAssets `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LocationAssets) Reset() {
	*x = LocationAssets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationAssets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationAssets) ProtoMessage() {}

func (x *LocationAssets) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationAssets.ProtoReflect.Descriptor instead.
func (*LocationAssets) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{17}
}

func (x *LocationAssets) GetInner() map[uint32]*TypeAssets {
	if x != nil {
		return x.Inner
	}
	return nil
}

// only includes station assets, uint64 is locationid
type AssetsRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner map[uint64]*LocationAssets `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AssetsRep) Reset() {
	*x = AssetsRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetsRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetsRep) ProtoMessage() {}

func (x *AssetsRep) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetsRep.ProtoReflect.Descriptor instead.
func (*AssetsRep) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{18}
}

func (x *AssetsRep) GetInner() map[uint64]*LocationAssets {
	if x != nil {
		return x.Inner
	}
	return nil
}

type AssetsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Characters   []*Entity `protobuf:"bytes,1,rep,name=characters,proto3" json:"characters,omitempty"`
	Corporations []*Entity `protobuf:"bytes,2,rep,name=corporations,proto3" json:"corporations,omitempty"`
}

func (x *AssetsReq) Reset() {
	*x = AssetsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetsReq) ProtoMessage() {}

func (x *AssetsReq) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetsReq.ProtoReflect.Descriptor instead.
func (*AssetsReq) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{19}
}

func (x *AssetsReq) GetCharacters() []*Entity {
	if x != nil {
		return x.Characters
	}
	return nil
}

func (x *AssetsReq) GetCorporations() []*Entity {
	if x != nil {
		return x.Corporations
	}
	return nil
}

type Skills struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner map[uint32]uint32 `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *Skills) Reset() {
	*x = Skills{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Skills) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Skills) ProtoMessage() {}

func (x *Skills) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Skills.ProtoReflect.Descriptor instead.
func (*Skills) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{20}
}

func (x *Skills) GetInner() map[uint32]uint32 {
	if x != nil {
		return x.Inner
	}
	return nil
}

type SkillsRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner map[uint64]*Skills `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SkillsRep) Reset() {
	*x = SkillsRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkillsRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkillsRep) ProtoMessage() {}

func (x *SkillsRep) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkillsRep.ProtoReflect.Descriptor instead.
func (*SkillsRep) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{21}
}

func (x *SkillsRep) GetInner() map[uint64]*Skills {
	if x != nil {
		return x.Inner
	}
	return nil
}

type SkillsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Characters []*Entity `protobuf:"bytes,1,rep,name=characters,proto3" json:"characters,omitempty"`
}

func (x *SkillsReq) Reset() {
	*x = SkillsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkillsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkillsReq) ProtoMessage() {}

func (x *SkillsReq) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkillsReq.ProtoReflect.Descriptor instead.
func (*SkillsReq) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{22}
}

func (x *SkillsReq) GetCharacters() []*Entity {
	if x != nil {
		return x.Characters
	}
	return nil
}

type ActiveOrder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buy      bool    `protobuf:"varint,1,opt,name=buy,proto3" json:"buy,omitempty"`
	Price    float64 `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`
	Quantity int64   `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *ActiveOrder) Reset() {
	*x = ActiveOrder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveOrder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveOrder) ProtoMessage() {}

func (x *ActiveOrder) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveOrder.ProtoReflect.Descriptor instead.
func (*ActiveOrder) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{23}
}

func (x *ActiveOrder) GetBuy() bool {
	if x != nil {
		return x.Buy
	}
	return false
}

func (x *ActiveOrder) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ActiveOrder) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type TypeActiveOrders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner []*ActiveOrder `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty"`
}

func (x *TypeActiveOrders) Reset() {
	*x = TypeActiveOrders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeActiveOrders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeActiveOrders) ProtoMessage() {}

func (x *TypeActiveOrders) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeActiveOrders.ProtoReflect.Descriptor instead.
func (*TypeActiveOrders) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{24}
}

func (x *TypeActiveOrders) GetInner() []*ActiveOrder {
	if x != nil {
		return x.Inner
	}
	return nil
}

type LocationActiveOrders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner map[uint32]*TypeActiveOrders `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LocationActiveOrders) Reset() {
	*x = LocationActiveOrders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationActiveOrders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationActiveOrders) ProtoMessage() {}

func (x *LocationActiveOrders) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationActiveOrders.ProtoReflect.Descriptor instead.
func (*LocationActiveOrders) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{25}
}

func (x *LocationActiveOrders) GetInner() map[uint32]*TypeActiveOrders {
	if x != nil {
		return x.Inner
	}
	return nil
}

// shouldn't include duplicates, uint64 is locationid
type ActiveOrdersRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner map[uint64]*LocationActiveOrders `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ActiveOrdersRep) Reset() {
	*x = ActiveOrdersRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveOrdersRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveOrdersRep) ProtoMessage() {}

func (x *ActiveOrdersRep) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveOrdersRep.ProtoReflect.Descriptor instead.
func (*ActiveOrdersRep) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{26}
}

func (x *ActiveOrdersRep) GetInner() map[uint64]*LocationActiveOrders {
	if x != nil {
		return x.Inner
	}
	return nil
}

type ActiveOrdersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Characters   []*Entity `protobuf:"bytes,1,rep,name=characters,proto3" json:"characters,omitempty"`
	Corporations []*Entity `protobuf:"bytes,2,rep,name=corporations,proto3" json:"corporations,omitempty"`
}

func (x *ActiveOrdersReq) Reset() {
	*x = ActiveOrdersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActiveOrdersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActiveOrdersReq) ProtoMessage() {}

func (x *ActiveOrdersReq) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActiveOrdersReq.ProtoReflect.Descriptor instead.
func (*ActiveOrdersReq) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{27}
}

func (x *ActiveOrdersReq) GetCharacters() []*Entity {
	if x != nil {
		return x.Characters
	}
	return nil
}

func (x *ActiveOrdersReq) GetCorporations() []*Entity {
	if x != nil {
		return x.Corporations
	}
	return nil
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buy      bool    `protobuf:"varint,1,opt,name=buy,proto3" json:"buy,omitempty"`
	Price    float64 `protobuf:"fixed64,2,opt,name=price,proto3" json:"price,omitempty"`
	Quantity int64   `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{28}
}

func (x *Transaction) GetBuy() bool {
	if x != nil {
		return x.Buy
	}
	return false
}

func (x *Transaction) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Transaction) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type TypeTransactions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner []*Transaction `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty"`
}

func (x *TypeTransactions) Reset() {
	*x = TypeTransactions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TypeTransactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypeTransactions) ProtoMessage() {}

func (x *TypeTransactions) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypeTransactions.ProtoReflect.Descriptor instead.
func (*TypeTransactions) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{29}
}

func (x *TypeTransactions) GetInner() []*Transaction {
	if x != nil {
		return x.Inner
	}
	return nil
}

type LocationTransactions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner map[uint32]*TypeTransactions `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LocationTransactions) Reset() {
	*x = LocationTransactions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationTransactions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationTransactions) ProtoMessage() {}

func (x *LocationTransactions) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationTransactions.ProtoReflect.Descriptor instead.
func (*LocationTransactions) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{30}
}

func (x *LocationTransactions) GetInner() map[uint32]*TypeTransactions {
	if x != nil {
		return x.Inner
	}
	return nil
}

type TransactionsRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner map[uint64]*LocationTransactions `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TransactionsRep) Reset() {
	*x = TransactionsRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionsRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionsRep) ProtoMessage() {}

func (x *TransactionsRep) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionsRep.ProtoReflect.Descriptor instead.
func (*TransactionsRep) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{31}
}

func (x *TransactionsRep) GetInner() map[uint64]*LocationTransactions {
	if x != nil {
		return x.Inner
	}
	return nil
}

type TransactionsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Characters   []*Entity `protobuf:"bytes,1,rep,name=characters,proto3" json:"characters,omitempty"`
	Corporations []*Entity `protobuf:"bytes,2,rep,name=corporations,proto3" json:"corporations,omitempty"`
	Since        uint64    `protobuf:"varint,3,opt,name=since,proto3" json:"since,omitempty"`
}

func (x *TransactionsReq) Reset() {
	*x = TransactionsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionsReq) ProtoMessage() {}

func (x *TransactionsReq) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionsReq.ProtoReflect.Descriptor instead.
func (*TransactionsReq) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{32}
}

func (x *TransactionsReq) GetCharacters() []*Entity {
	if x != nil {
		return x.Characters
	}
	return nil
}

func (x *TransactionsReq) GetCorporations() []*Entity {
	if x != nil {
		return x.Corporations
	}
	return nil
}

func (x *TransactionsReq) GetSince() uint64 {
	if x != nil {
		return x.Since
	}
	return 0
}

type ExchangeContractItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId   uint32 `protobuf:"varint,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	Quantity int64  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *ExchangeContractItem) Reset() {
	*x = ExchangeContractItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeContractItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeContractItem) ProtoMessage() {}

func (x *ExchangeContractItem) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeContractItem.ProtoReflect.Descriptor instead.
func (*ExchangeContractItem) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{33}
}

func (x *ExchangeContractItem) GetTypeId() uint32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *ExchangeContractItem) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type ExchangeContract struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items       []*ExchangeContractItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	LocationId  uint64                  `protobuf:"varint,2,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	Description string                  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Price       float64                 `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	Reward      float64                 `protobuf:"fixed64,5,opt,name=reward,proto3" json:"reward,omitempty"`
	Expires     uint64                  `protobuf:"varint,6,opt,name=expires,proto3" json:"expires,omitempty"`
	Issued      uint64                  `protobuf:"varint,7,opt,name=issued,proto3" json:"issued,omitempty"`
	Volume      float64                 `protobuf:"fixed64,8,opt,name=volume,proto3" json:"volume,omitempty"`
	CharId      uint32                  `protobuf:"varint,9,opt,name=char_id,json=charId,proto3" json:"char_id,omitempty"`
	CorpId      uint32                  `protobuf:"varint,10,opt,name=corp_id,json=corpId,proto3" json:"corp_id,omitempty"`
	IsCorp      bool                    `protobuf:"varint,11,opt,name=is_corp,json=isCorp,proto3" json:"is_corp,omitempty"`
	SystemId    uint32                  `protobuf:"varint,12,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`
	RegionId    uint32                  `protobuf:"varint,13,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
}

func (x *ExchangeContract) Reset() {
	*x = ExchangeContract{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeContract) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeContract) ProtoMessage() {}

func (x *ExchangeContract) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeContract.ProtoReflect.Descriptor instead.
func (*ExchangeContract) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{34}
}

func (x *ExchangeContract) GetItems() []*ExchangeContractItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ExchangeContract) GetLocationId() uint64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *ExchangeContract) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ExchangeContract) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ExchangeContract) GetReward() float64 {
	if x != nil {
		return x.Reward
	}
	return 0
}

func (x *ExchangeContract) GetExpires() uint64 {
	if x != nil {
		return x.Expires
	}
	return 0
}

func (x *ExchangeContract) GetIssued() uint64 {
	if x != nil {
		return x.Issued
	}
	return 0
}

func (x *ExchangeContract) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *ExchangeContract) GetCharId() uint32 {
	if x != nil {
		return x.CharId
	}
	return 0
}

func (x *ExchangeContract) GetCorpId() uint32 {
	if x != nil {
		return x.CorpId
	}
	return 0
}

func (x *ExchangeContract) GetIsCorp() bool {
	if x != nil {
		return x.IsCorp
	}
	return false
}

func (x *ExchangeContract) GetSystemId() uint32 {
	if x != nil {
		return x.SystemId
	}
	return 0
}

func (x *ExchangeContract) GetRegionId() uint32 {
	if x != nil {
		return x.RegionId
	}
	return 0
}

type ExchangeContractsRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inner []*ExchangeContract `protobuf:"bytes,1,rep,name=inner,proto3" json:"inner,omitempty"`
}

func (x *ExchangeContractsRep) Reset() {
	*x = ExchangeContractsRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeContractsRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeContractsRep) ProtoMessage() {}

func (x *ExchangeContractsRep) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeContractsRep.ProtoReflect.Descriptor instead.
func (*ExchangeContractsRep) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{35}
}

func (x *ExchangeContractsRep) GetInner() []*ExchangeContract {
	if x != nil {
		return x.Inner
	}
	return nil
}

type ExchangeContractsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Characters   []*Entity `protobuf:"bytes,1,rep,name=characters,proto3" json:"characters,omitempty"`
	Corporations []*Entity `protobuf:"bytes,2,rep,name=corporations,proto3" json:"corporations,omitempty"`
	ActiveOnly   bool      `protobuf:"varint,3,opt,name=active_only,json=activeOnly,proto3" json:"active_only,omitempty"`
	IncludeItems bool      `protobuf:"varint,4,opt,name=include_items,json=includeItems,proto3" json:"include_items,omitempty"`
}

func (x *ExchangeContractsReq) Reset() {
	*x = ExchangeContractsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weve_esi_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExchangeContractsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExchangeContractsReq) ProtoMessage() {}

func (x *ExchangeContractsReq) ProtoReflect() protoreflect.Message {
	mi := &file_weve_esi_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExchangeContractsReq.ProtoReflect.Descriptor instead.
func (*ExchangeContractsReq) Descriptor() ([]byte, []int) {
	return file_weve_esi_proto_rawDescGZIP(), []int{36}
}

func (x *ExchangeContractsReq) GetCharacters() []*Entity {
	if x != nil {
		return x.Characters
	}
	return nil
}

func (x *ExchangeContractsReq) GetCorporations() []*Entity {
	if x != nil {
		return x.Corporations
	}
	return nil
}

func (x *ExchangeContractsReq) GetActiveOnly() bool {
	if x != nil {
		return x.ActiveOnly
	}
	return false
}

func (x *ExchangeContractsReq) GetIncludeItems() bool {
	if x != nil {
		return x.IncludeItems
	}
	return false
}

var File_weve_esi_proto protoreflect.FileDescriptor

var file_weve_esi_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x2e, 0x0a, 0x06, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x3f, 0x0a, 0x0b, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x22, 0x44, 0x0a, 0x0f, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x70, 0x12, 0x31, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0x73, 0x0a, 0x0f, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x75,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x62, 0x75, 0x79, 0x22, 0x7b, 0x0a, 0x13,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x12, 0x31, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x03, 0x72, 0x65, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x70, 0x52, 0x03, 0x72, 0x65, 0x70, 0x22, 0x51, 0x0a, 0x14, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x70, 0x12, 0x39, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0x4d, 0x0a, 0x14,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x35, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0x8f, 0x01, 0x0a, 0x10,
	0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x70,
	0x12, 0x41, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x70, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x1a, 0x38, 0x0a, 0x0a, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x12, 0x0a,
	0x10, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x22, 0xcb, 0x01, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61,
	0x63, 0x74, 0x75, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x5f, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x72, 0x65,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x5f, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x72,
	0x65, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x70,
	0x79, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x63, 0x6f, 0x70, 0x79,
	0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0xa8, 0x01, 0x0a, 0x0e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x70, 0x12, 0x3f, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x70, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x1a, 0x55, 0x0a, 0x0a, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x10, 0x0a, 0x0e, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x22, 0x84, 0x03, 0x0a,
	0x0b, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x4a, 0x6f, 0x62, 0x12, 0x1f, 0x0a, 0x0b,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x62, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x62, 0x6c, 0x75, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x2f, 0x0a, 0x13, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x65,
	0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x12, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x45, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x66, 0x66, 0x69,
	0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x74, 0x69,
	0x6d, 0x65, 0x45, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x75, 0x6e, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x75, 0x6e, 0x73, 0x12, 0x15, 0x0a, 0x06,
	0x69, 0x73, 0x5f, 0x62, 0x70, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73,
	0x42, 0x70, 0x63, 0x22, 0x44, 0x0a, 0x0f, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x4a,
	0x6f, 0x62, 0x73, 0x52, 0x65, 0x70, 0x12, 0x31, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x4a,
	0x6f, 0x62, 0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0x85, 0x01, 0x0a, 0x0f, 0x49, 0x6e,
	0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x4a, 0x6f, 0x62, 0x73, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x73, 0x12, 0x3a, 0x0a, 0x0c, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x65,
	0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x52, 0x0c, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0xc4, 0x01, 0x0a, 0x05, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x75, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x72, 0x75, 0x6e, 0x73, 0x12, 0x2f, 0x0a, 0x13, 0x6d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x5f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x45,
	0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x65, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x39, 0x0a, 0x0a, 0x54, 0x79, 0x70, 0x65,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x05, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x22, 0xa7, 0x01, 0x0a, 0x0e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x3f, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x1a, 0x54, 0x0a, 0x0a, 0x49, 0x6e, 0x6e, 0x65, 0x72,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73,
	0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa1, 0x01,
	0x0a, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x70, 0x12, 0x3a, 0x0a, 0x05, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x77, 0x65, 0x76,
	0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x70, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x1a, 0x58, 0x0a, 0x0a, 0x49, 0x6e, 0x6e, 0x65, 0x72,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73,
	0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x7f, 0x0a, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x36,
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x12, 0x3a, 0x0a, 0x0c, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77,
	0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x7b, 0x0a, 0x06, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x37, 0x0a, 0x05,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x77, 0x65,
	0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x73, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x1a, 0x38, 0x0a, 0x0a, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x99, 0x01, 0x0a, 0x09, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x70, 0x12, 0x3a, 0x0a,
	0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x77,
	0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x70, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x1a, 0x50, 0x0a, 0x0a, 0x49, 0x6e, 0x6e,
	0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f,
	0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x43, 0x0a, 0x09, 0x53,
	0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77,
	0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73,
	0x22, 0x51, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x62, 0x75, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x62, 0x75,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x22, 0x45, 0x0a, 0x10, 0x54, 0x79, 0x70, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73,
	0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0xb9, 0x01, 0x0a, 0x14, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x12, 0x45, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x1a, 0x5a, 0x0a, 0x0a, 0x49, 0x6e,
	0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x36, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x77, 0x65, 0x76, 0x65,
	0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb3, 0x01, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x12, 0x40, 0x0a, 0x05, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x77, 0x65, 0x76, 0x65,
	0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x1a, 0x5e, 0x0a, 0x0a,
	0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3a, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x77, 0x65,
	0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x85, 0x01, 0x0a,
	0x0f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x36, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x12, 0x3a, 0x0a, 0x0c, 0x63, 0x6f, 0x72, 0x70,
	0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x51, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x75, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x03, 0x62, 0x75, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x45, 0x0a, 0x10, 0x54, 0x79, 0x70, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77, 0x65, 0x76,
	0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0xb9,
	0x01, 0x0a, 0x14, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x45, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73,
	0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x49, 0x6e, 0x6e,
	0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x1a, 0x5a,
	0x0a, 0x0a, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x36,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb3, 0x01, 0x0a, 0x0f, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x12, 0x40,
	0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x2e, 0x49,
	0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x1a, 0x5e, 0x0a, 0x0a, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x3a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x9b, 0x01, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f,
	0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x12, 0x3a, 0x0a, 0x0c,
	0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x63, 0x6f, 0x72, 0x70,
	0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x69, 0x6e, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x69, 0x6e, 0x63, 0x65, 0x22, 0x4b,
	0x0a, 0x14, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x8e, 0x03, 0x0a, 0x10,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x12, 0x3a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x68, 0x61, 0x72, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x72, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x63, 0x6f, 0x72, 0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f,
	0x63, 0x6f, 0x72, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x43, 0x6f,
	0x72, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x14,
	0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x73, 0x52, 0x65, 0x70, 0x12, 0x36, 0x0a, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x05, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x22, 0xd0, 0x01, 0x0a,
	0x14, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x65, 0x76, 0x65,
	0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x12, 0x3a, 0x0a,
	0x0c, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x63, 0x6f, 0x72,
	0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x32,
	0xb7, 0x06, 0x0a, 0x07, 0x57, 0x65, 0x76, 0x65, 0x45, 0x73, 0x69, 0x12, 0x50, 0x0a, 0x0c, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x2e, 0x77, 0x65,
	0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x77,
	0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x12, 0x53, 0x0a,
	0x0d, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20,
	0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x20, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x70, 0x12, 0x3e, 0x0a, 0x06, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x19, 0x2e, 0x77,
	0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65,
	0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52,
	0x65, 0x70, 0x12, 0x50, 0x0a, 0x0c, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x4a, 0x6f,
	0x62, 0x73, 0x12, 0x1f, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x4a, 0x6f, 0x62, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x4a, 0x6f, 0x62,
	0x73, 0x52, 0x65, 0x70, 0x12, 0x50, 0x0a, 0x0c, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x12, 0x3e, 0x0a, 0x06, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73,
	0x12, 0x19, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x77, 0x65,
	0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x73, 0x52, 0x65, 0x70, 0x12, 0x4d, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1e, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x70, 0x12, 0x50, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73,
	0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x12, 0x5f, 0x0a, 0x11, 0x45, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x12, 0x24, 0x2e, 0x77,
	0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x24, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x70, 0x12, 0x5f, 0x0a, 0x11, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x24, 0x2e,
	0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x77, 0x65, 0x76, 0x65, 0x5f, 0x65, 0x73, 0x69, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x70, 0x42, 0x08, 0x5a, 0x06, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_weve_esi_proto_rawDescOnce sync.Once
	file_weve_esi_proto_rawDescData = file_weve_esi_proto_rawDesc
)

func file_weve_esi_proto_rawDescGZIP() []byte {
	file_weve_esi_proto_rawDescOnce.Do(func() {
		file_weve_esi_proto_rawDescData = protoimpl.X.CompressGZIP(file_weve_esi_proto_rawDescData)
	})
	return file_weve_esi_proto_rawDescData
}

var file_weve_esi_proto_msgTypes = make([]protoimpl.MessageInfo, 47)
var file_weve_esi_proto_goTypes = []interface{}{
	(*Entity)(nil),               // 0: weve_esi_proto.Entity
	(*MarketOrder)(nil),          // 1: weve_esi_proto.MarketOrder
	(*MarketOrdersRep)(nil),      // 2: weve_esi_proto.MarketOrdersRep
	(*MarketOrdersReq)(nil),      // 3: weve_esi_proto.MarketOrdersReq
	(*MultiMarketOrderRep)(nil),  // 4: weve_esi_proto.MultiMarketOrderRep
	(*MultiMarketOrdersRep)(nil), // 5: weve_esi_proto.MultiMarketOrdersRep
	(*MultiMarketOrdersReq)(nil), // 6: weve_esi_proto.MultiMarketOrdersReq
	(*AdjustedPriceRep)(nil),     // 7: weve_esi_proto.AdjustedPriceRep
	(*AdjustedPriceReq)(nil),     // 8: weve_esi_proto.AdjustedPriceReq
	(*SystemIndex)(nil),          // 9: weve_esi_proto.SystemIndex
	(*SystemIndexRep)(nil),       // 10: weve_esi_proto.SystemIndexRep
	(*SystemIndexReq)(nil),       // 11: weve_esi_proto.SystemIndexReq
	(*IndustryJob)(nil),          // 12: weve_esi_proto.IndustryJob
	(*IndustryJobsRep)(nil),      // 13: weve_esi_proto.IndustryJobsRep
	(*IndustryJobsReq)(nil),      // 14: weve_esi_proto.IndustryJobsReq
	(*Asset)(nil),                // 15: weve_esi_proto.Asset
	(*TypeAssets)(nil),           // 16: weve_esi_proto.TypeAssets
	(*LocationAssets)(nil),       // 17: weve_esi_proto.LocationAssets
	(*AssetsRep)(nil),            // 18: weve_esi_proto.AssetsRep
	(*AssetsReq)(nil),            // 19: weve_esi_proto.AssetsReq
	(*Skills)(nil),               // 20: weve_esi_proto.Skills
	(*SkillsRep)(nil),            // 21: weve_esi_proto.SkillsRep
	(*SkillsReq)(nil),            // 22: weve_esi_proto.SkillsReq
	(*ActiveOrder)(nil),          // 23: weve_esi_proto.ActiveOrder
	(*TypeActiveOrders)(nil),     // 24: weve_esi_proto.TypeActiveOrders
	(*LocationActiveOrders)(nil), // 25: weve_esi_proto.LocationActiveOrders
	(*ActiveOrdersRep)(nil),      // 26: weve_esi_proto.ActiveOrdersRep
	(*ActiveOrdersReq)(nil),      // 27: weve_esi_proto.ActiveOrdersReq
	(*Transaction)(nil),          // 28: weve_esi_proto.Transaction
	(*TypeTransactions)(nil),     // 29: weve_esi_proto.TypeTransactions
	(*LocationTransactions)(nil), // 30: weve_esi_proto.LocationTransactions
	(*TransactionsRep)(nil),      // 31: weve_esi_proto.TransactionsRep
	(*TransactionsReq)(nil),      // 32: weve_esi_proto.TransactionsReq
	(*ExchangeContractItem)(nil), // 33: weve_esi_proto.ExchangeContractItem
	(*ExchangeContract)(nil),     // 34: weve_esi_proto.ExchangeContract
	(*ExchangeContractsRep)(nil), // 35: weve_esi_proto.ExchangeContractsRep
	(*ExchangeContractsReq)(nil), // 36: weve_esi_proto.ExchangeContractsReq
	nil,                          // 37: weve_esi_proto.AdjustedPriceRep.InnerEntry
	nil,                          // 38: weve_esi_proto.SystemIndexRep.InnerEntry
	nil,                          // 39: weve_esi_proto.LocationAssets.InnerEntry
	nil,                          // 40: weve_esi_proto.AssetsRep.InnerEntry
	nil,                          // 41: weve_esi_proto.Skills.InnerEntry
	nil,                          // 42: weve_esi_proto.SkillsRep.InnerEntry
	nil,                          // 43: weve_esi_proto.LocationActiveOrders.InnerEntry
	nil,                          // 44: weve_esi_proto.ActiveOrdersRep.InnerEntry
	nil,                          // 45: weve_esi_proto.LocationTransactions.InnerEntry
	nil,                          // 46: weve_esi_proto.TransactionsRep.InnerEntry
}
var file_weve_esi_proto_depIdxs = []int32{
	1,  // 0: weve_esi_proto.MarketOrdersRep.inner:type_name -> weve_esi_proto.MarketOrder
	3,  // 1: weve_esi_proto.MultiMarketOrderRep.req:type_name -> weve_esi_proto.MarketOrdersReq
	2,  // 2: weve_esi_proto.MultiMarketOrderRep.rep:type_name -> weve_esi_proto.MarketOrdersRep
	4,  // 3: weve_esi_proto.MultiMarketOrdersRep.inner:type_name -> weve_esi_proto.MultiMarketOrderRep
	3,  // 4: weve_esi_proto.MultiMarketOrdersReq.inner:type_name -> weve_esi_proto.MarketOrdersReq
	37, // 5: weve_esi_proto.AdjustedPriceRep.inner:type_name -> weve_esi_proto.AdjustedPriceRep.InnerEntry
	38, // 6: weve_esi_proto.SystemIndexRep.inner:type_name -> weve_esi_proto.SystemIndexRep.InnerEntry
	12, // 7: weve_esi_proto.IndustryJobsRep.inner:type_name -> weve_esi_proto.IndustryJob
	0,  // 8: weve_esi_proto.IndustryJobsReq.characters:type_name -> weve_esi_proto.Entity
	0,  // 9: weve_esi_proto.IndustryJobsReq.corporations:type_name -> weve_esi_proto.Entity
	15, // 10: weve_esi_proto.TypeAssets.inner:type_name -> weve_esi_proto.Asset
	39, // 11: weve_esi_proto.LocationAssets.inner:type_name -> weve_esi_proto.LocationAssets.InnerEntry
	40, // 12: weve_esi_proto.AssetsRep.inner:type_name -> weve_esi_proto.AssetsRep.InnerEntry
	0,  // 13: weve_esi_proto.AssetsReq.characters:type_name -> weve_esi_proto.Entity
	0,  // 14: weve_esi_proto.AssetsReq.corporations:type_name -> weve_esi_proto.Entity
	41, // 15: weve_esi_proto.Skills.inner:type_name -> weve_esi_proto.Skills.InnerEntry
	42, // 16: weve_esi_proto.SkillsRep.inner:type_name -> weve_esi_proto.SkillsRep.InnerEntry
	0,  // 17: weve_esi_proto.SkillsReq.characters:type_name -> weve_esi_proto.Entity
	23, // 18: weve_esi_proto.TypeActiveOrders.inner:type_name -> weve_esi_proto.ActiveOrder
	43, // 19: weve_esi_proto.LocationActiveOrders.inner:type_name -> weve_esi_proto.LocationActiveOrders.InnerEntry
	44, // 20: weve_esi_proto.ActiveOrdersRep.inner:type_name -> weve_esi_proto.ActiveOrdersRep.InnerEntry
	0,  // 21: weve_esi_proto.ActiveOrdersReq.characters:type_name -> weve_esi_proto.Entity
	0,  // 22: weve_esi_proto.ActiveOrdersReq.corporations:type_name -> weve_esi_proto.Entity
	28, // 23: weve_esi_proto.TypeTransactions.inner:type_name -> weve_esi_proto.Transaction
	45, // 24: weve_esi_proto.LocationTransactions.inner:type_name -> weve_esi_proto.LocationTransactions.InnerEntry
	46, // 25: weve_esi_proto.TransactionsRep.inner:type_name -> weve_esi_proto.TransactionsRep.InnerEntry
	0,  // 26: weve_esi_proto.TransactionsReq.characters:type_name -> weve_esi_proto.Entity
	0,  // 27: weve_esi_proto.TransactionsReq.corporations:type_name -> weve_esi_proto.Entity
	33, // 28: weve_esi_proto.ExchangeContract.items:type_name -> weve_esi_proto.ExchangeContractItem
	34, // 29: weve_esi_proto.ExchangeContractsRep.inner:type_name -> weve_esi_proto.ExchangeContract
	0,  // 30: weve_esi_proto.ExchangeContractsReq.characters:type_name -> weve_esi_proto.Entity
	0,  // 31: weve_esi_proto.ExchangeContractsReq.corporations:type_name -> weve_esi_proto.Entity
	9,  // 32: weve_esi_proto.SystemIndexRep.InnerEntry.value:type_name -> weve_esi_proto.SystemIndex
	16, // 33: weve_esi_proto.LocationAssets.InnerEntry.value:type_name -> weve_esi_proto.TypeAssets
	17, // 34: weve_esi_proto.AssetsRep.InnerEntry.value:type_name -> weve_esi_proto.LocationAssets
	20, // 35: weve_esi_proto.SkillsRep.InnerEntry.value:type_name -> weve_esi_proto.Skills
	24, // 36: weve_esi_proto.LocationActiveOrders.InnerEntry.value:type_name -> weve_esi_proto.TypeActiveOrders
	25, // 37: weve_esi_proto.ActiveOrdersRep.InnerEntry.value:type_name -> weve_esi_proto.LocationActiveOrders
	29, // 38: weve_esi_proto.LocationTransactions.InnerEntry.value:type_name -> weve_esi_proto.TypeTransactions
	30, // 39: weve_esi_proto.TransactionsRep.InnerEntry.value:type_name -> weve_esi_proto.LocationTransactions
	27, // 40: weve_esi_proto.WeveEsi.ActiveOrders:input_type -> weve_esi_proto.ActiveOrdersReq
	8,  // 41: weve_esi_proto.WeveEsi.AdjustedPrice:input_type -> weve_esi_proto.AdjustedPriceReq
	19, // 42: weve_esi_proto.WeveEsi.Assets:input_type -> weve_esi_proto.AssetsReq
	14, // 43: weve_esi_proto.WeveEsi.IndustryJobs:input_type -> weve_esi_proto.IndustryJobsReq
	3,  // 44: weve_esi_proto.WeveEsi.MarketOrders:input_type -> weve_esi_proto.MarketOrdersReq
	22, // 45: weve_esi_proto.WeveEsi.Skills:input_type -> weve_esi_proto.SkillsReq
	11, // 46: weve_esi_proto.WeveEsi.SystemIndex:input_type -> weve_esi_proto.SystemIndexReq
	32, // 47: weve_esi_proto.WeveEsi.Transactions:input_type -> weve_esi_proto.TransactionsReq
	36, // 48: weve_esi_proto.WeveEsi.ExchangeContracts:input_type -> weve_esi_proto.ExchangeContractsReq
	6,  // 49: weve_esi_proto.WeveEsi.MultiMarketOrders:input_type -> weve_esi_proto.MultiMarketOrdersReq
	26, // 50: weve_esi_proto.WeveEsi.ActiveOrders:output_type -> weve_esi_proto.ActiveOrdersRep
	7,  // 51: weve_esi_proto.WeveEsi.AdjustedPrice:output_type -> weve_esi_proto.AdjustedPriceRep
	18, // 52: weve_esi_proto.WeveEsi.Assets:output_type -> weve_esi_proto.AssetsRep
	13, // 53: weve_esi_proto.WeveEsi.IndustryJobs:output_type -> weve_esi_proto.IndustryJobsRep
	2,  // 54: weve_esi_proto.WeveEsi.MarketOrders:output_type -> weve_esi_proto.MarketOrdersRep
	21, // 55: weve_esi_proto.WeveEsi.Skills:output_type -> weve_esi_proto.SkillsRep
	10, // 56: weve_esi_proto.WeveEsi.SystemIndex:output_type -> weve_esi_proto.SystemIndexRep
	31, // 57: weve_esi_proto.WeveEsi.Transactions:output_type -> weve_esi_proto.TransactionsRep
	35, // 58: weve_esi_proto.WeveEsi.ExchangeContracts:output_type -> weve_esi_proto.ExchangeContractsRep
	5,  // 59: weve_esi_proto.WeveEsi.MultiMarketOrders:output_type -> weve_esi_proto.MultiMarketOrdersRep
	50, // [50:60] is the sub-list for method output_type
	40, // [40:50] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_weve_esi_proto_init() }
func file_weve_esi_proto_init() {
	if File_weve_esi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_weve_esi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketOrdersRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketOrdersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiMarketOrderRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiMarketOrdersRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiMarketOrdersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdjustedPriceRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdjustedPriceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemIndexRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemIndexReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndustryJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndustryJobsRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndustryJobsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Asset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeAssets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationAssets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetsRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Skills); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkillsRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkillsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveOrder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeActiveOrders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationActiveOrders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveOrdersRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActiveOrdersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TypeTransactions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationTransactions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionsRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeContractItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeContract); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeContractsRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weve_esi_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExchangeContractsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_weve_esi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   47,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_weve_esi_proto_goTypes,
		DependencyIndexes: file_weve_esi_proto_depIdxs,
		MessageInfos:      file_weve_esi_proto_msgTypes,
	}.Build()
	File_weve_esi_proto = out.File
	file_weve_esi_proto_rawDesc = nil
	file_weve_esi_proto_goTypes = nil
	file_weve_esi_proto_depIdxs = nil
}
